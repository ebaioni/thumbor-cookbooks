#!/usr/bin/python
# -*- coding: utf-8 -*-

# thumbor imaging service
# https://github.com/globocom/thumbor/wiki

# Licensed under the MIT license:
# http://www.opensource.org/licenses/mit-license
# Copyright (c) 2011 globo.com timehome@corp.globo.com

# the quality of the generated image
# this option can vary widely between
# imaging engines and works only on jpeg images
QUALITY = 85

# enable this options to specify client-side cache in seconds
MAX_AGE = 24 * 60 * 60

# client-side caching time for temporary images (using queued detectors or after detection errors)
MAX_AGE_TEMP_IMAGE = 0

# the way images are to be loaded
LOADER = 'thumbor.loaders.http_loader'

# if you set UPLOAD_ENABLED to True,
# a route /upload will be enabled for your thumbor process
# You can then do a put to this URL to store the photo
# using the specified Storage
UPLOAD_ENABLED = False
UPLOAD_PHOTO_STORAGE = 'thumbor.storages.file_storage'
UPLOAD_PUT_ALLOWED = False
UPLOAD_DELETE_ALLOWED = False

# how to store the loaded images so we don't have to load
# them again with the loader
STORAGE = 'thumbor.storages.redis_storage'
#STORAGE = 'thumbor.storages.no_storage'
#STORAGE = 'thumbor.storages.file_storage'
#STORAGE = 'thumbor.storages.mixed_storage'

# root path of the file storage
FILE_STORAGE_ROOT_PATH = '/var/lib/thumbor/storage'

# If you want to cache results, use this options to specify how to cache it
# Set Expiration seconds to ZERO if you want them not to expire.
#RESULT_STORAGE = 'thumbor.result_storages.file_storage'
#RESULT_STORAGE_EXPIRATION_SECONDS = 60 * 60 * 24 # one day
#RESULT_STORAGE_FILE_STORAGE_ROOT_PATH = '/tmp/thumbor/result_storage'

RESULT_STORAGE_STORES_UNSAFE=False

# stores the crypto key in each image in the storage
# this is VERY useful to allow changing the security key
STORES_CRYPTO_KEY_FOR_EACH_IMAGE = True

REDIS_STORAGE_SERVER_HOST = 'localhost'
REDIS_STORAGE_SERVER_PORT = 6379
REDIS_STORAGE_SERVER_DB = 0
REDIS_STORAGE_SERVER_PASSWORD = None

# imaging engine to use to process images
# OpenCV will still be used for smart detection when PIL is the engine
# but does not support flipping when used as the engine.
#ENGINE = 'thumbor.engines.graphicsmagick'
ENGINE = 'thumbor.engines.pil'
#ENGINE = 'thumbor.engines.opencv'

# detectors to use to find Focal Points in the image
# more about detectors can be found in thumbor's docs
# at https://github.com/globocom/thumbor/wiki
DETECTORS = [
    'thumbor.detectors.face_detector',
    'thumbor.detectors.feature_detector',
]

# Redis parameters for queued detectors
REDIS_QUEUE_SERVER_HOST = 'localhost'
REDIS_QUEUE_SERVER_PORT = 6379
REDIS_QUEUE_SERVER_DB = 0
REDIS_QUEUE_SERVER_PASSWORD = None

# if you use face detection this is the file that
# OpenCV will use to find faces. The default should be
# fine, so change this at your own peril.
# if you set a relative path it will be relative to
# the thumbor/detectors/face_detector folder
#FACE_DETECTOR_CASCADE_FILE = 'haarcascade_frontalface_alt.xml'

# this is the security key used to encrypt/decrypt urls.
# make sure this is unique and not well-known
# This can be any string of up to 16 characters
# Only used if keyfile is not specified in /etc/default/thumbor
#SECURITY_KEY = "MY_SECURE_KEY"

# Mixed storage classes. Change them to the fullname of the
# storage you desire for each operation.
#MIXED_STORAGE_FILE_STORAGE = 'thumbor.storages.file_storage'
#MIXED_STORAGE_CRYPTO_STORAGE = 'thumbor.storages.no_storage'
#MIXED_STORAGE_DETECTOR_STORAGE = 'thumbor.storages.no_storage'

FILTERS = [
    'thumbor.filters.brightness',
    'thumbor.filters.contrast',
    'thumbor.filters.rgb',
    'thumbor.filters.round_corner',
    'thumbor.filters.quality',
    'thumbor.filters.noise',
    'thumbor.filters.watermark',
    'thumbor.filters.equalize',
    'thumbor.filters.fill',
    'thumbor.filters.sharpen',
    'thumbor.filters.strip_icc',
    'thumbor.filters.frame',

    # can only be applied if there are already points for the image being served
    # this means that either you are using the local face detector or the image
    # has already went through remote detection
    # 'thumbor.filters.redeye',
]
